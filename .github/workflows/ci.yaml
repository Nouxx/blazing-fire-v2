name: CI

concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

env:
  E2E_TESTS_SUMMARY_TEMPLATE: .github/templates/tests/e2e/step-summary.md
  E2E_TESTS_REPORT_PATH: pr-${{ github.event.number }}/e2e
  E2E_TESTS_REPORT_URL: https://nouxx.github.io/blazing-fire-v2/pr-${{ github.event.number }}/e2e
  UI_TESTS_SUMMARY_TEMPLATE: .github/templates/tests/ui/step-summary.md
  UI_TESTS_REPORT_PATH: pr-${{ github.event.number }}/ui
  UI_TESTS_REPORT_URL: https://nouxx.github.io/blazing-fire-v2/pr-${{ github.event.number }}/ui

jobs:
  code-quality:
    name: Code quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4 # uses "packageManager" version in package.json

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Node dependencies (on the host)
        run: pnpm install --frozen-lockfile

      - name: Run code formatting check
        run: pnpm run format:check

      - name: Lint
        run: pnpm run lint

  ui-tests:
    name: UI Tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run UI tests
        id: ui-tests
        run: docker compose run --rm -P test pnpm test:ui:docker

      - name: Deploy UI tests reports
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          destination_dir: ${{ env.UI_TESTS_REPORT_PATH }}

      - name: Generate UI Test Summary
        uses: daun/playwright-report-summary@v3
        id: test-summary
        if: always()
        with:
          report-file: playwright-report/results.json
          create-comment: false
          report-url: ${{ env.UI_TESTS_REPORT_URL }}

      - name: Add UI tests summary to job run summary
        if: always()
        run: echo "${{ steps.test-summary.outputs.summary }}" >> $GITHUB_STEP_SUMMARY

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start local supabase instance
        run: supabase start

      - name: Setup .env
        run: ./tools/scripts/setup-env.sh

      - name: Build docker images
        run: docker compose build test

      - name: Run E2E tests
        id: e2e-tests
        run: docker compose run --rm -P test pnpm test:e2e:docker

      - name: Deploy E2E tests reports
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          destination_dir: ${{ env.E2E_TESTS_REPORT_PATH }}

      - name: Generate E2E Test Summary
        uses: daun/playwright-report-summary@v3
        id: test-summary
        if: always()
        with:
          report-file: playwright-report/results.json
          create-comment: false
          report-url: ${{ env.E2E_TESTS_REPORT_URL }}

      - name: Add E2E tests summary to job run summary
        if: always()
        run: echo "${{ steps.test-summary.outputs.summary }}" >> $GITHUB_STEP_SUMMARY
